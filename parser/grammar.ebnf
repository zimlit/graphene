program    = expression* ;

expression = while ;

while      = "while" expression expression* "end"
           | if ;

if         = "if" expression expression* (("else if" expression expression*)*? "else" expression*)? "end"
           | varDecl ;

varDecl    = "let" "mut"? IDENT ":" TYPE "=" expression
           | fn ;
fn = FN IDENT? "(" (IDENT ":" Type (", " IDENT: TYPE))? ")" ":" TYPE expression* "end"
   | assignment ;
assignment = IDENT "=" expression
           | equality;
equality   = comparison ( ( "!=" | "==" ) comparison )* ;
comparison = term ( ( | "<" | ">" | "<=" | ">=") term)*;
term       = factor ( ( "-" | "+" ) factor )* ;
factor     = unary ( ( "/" | "*" ) unary )* ;
unary      = ( "-" | "!") unary
           | primary ;
primary    = NUMBER | STRING | "(" expression ")" ;
